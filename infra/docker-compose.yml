version: "3.9"

x-health-tcp: &health_tcp
  test: ["CMD-SHELL", "python -c \"import socket; s=socket.create_connection(('localhost', 8000), 2); s.close()\""]
  interval: 10s
  timeout: 3s
  retries: 10
  start_period: 10s

services:
  redis:
    image: redis:7-alpine
    ports: ["6379:6379"]
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  ingest:
    build:
      context: ..
      dockerfile: services/ingest/Dockerfile
    env_file: [ ../.env ]
    environment:
      REDIS_URL: redis://redis:6379/0
    depends_on:
      redis: { condition: service_healthy }
    ports: ["8001:8000"]
    healthcheck: *health_tcp
    volumes:
      - ../data:/app/data

  embeddings:
    build:
      context: ..
      dockerfile: services/embeddings/Dockerfile
    env_file: [ ../.env ]
    environment:
      REDIS_URL: redis://redis:6379/0
    depends_on:
      redis: { condition: service_healthy }
    ports: ["8002:8000"]
    healthcheck: *health_tcp
    volumes:
      - ../data:/app/data

  retrieval:
    build:
      context: ..
      dockerfile: services/retrieval/Dockerfile
    env_file: [ ../.env ]
    environment:
      REDIS_URL: redis://redis:6379/0
      HF_HOME: /root/.cache/huggingface
      TRANSFORMERS_CACHE: /root/.cache/huggingface
      SENTENCE_TRANSFORMERS_HOME: /root/.cache/huggingface
    depends_on:
      redis: { condition: service_healthy }
    ports: ["8003:8000"]
    healthcheck: *health_tcp
    volumes:
      - ../data:/app/data
      - ../.cache/huggingface:/root/.cache/huggingface

  llm_generate:
    build:
      context: ..
      dockerfile: services/llm_generate/Dockerfile
    env_file: [ ../.env ]
    environment:
      REDIS_URL: redis://redis:6379/0
    depends_on:
      redis: { condition: service_healthy }
    ports: ["8004:8000"]
    healthcheck: *health_tcp
    volumes:
      - ../data:/app/data

  evaluation:
    build:
      context: ..
      dockerfile: services/evaluation/Dockerfile
    env_file: [ ../.env ]
    environment:
      REDIS_URL: redis://redis:6379/0
    depends_on:
      redis: { condition: service_healthy }
    ports: ["8005:8000"]
    healthcheck: *health_tcp
    volumes:
      - ../data:/app/data

  api_gateway:
    build:
      context: ..
      dockerfile: services/api_gateway/Dockerfile
    env_file: [ ../.env ]
    environment:
      REDIS_URL: redis://redis:6379/0
      INGEST_URL: http://ingest:8000
      RETRIEVAL_URL: http://retrieval:8000
      EMBEDDINGS_URL: http://embeddings:8000
      LLM_GENERATE_URL: http://llm_generate:8000
      EVALUATION_URL: http://evaluation:8000
    depends_on:
      ingest: { condition: service_healthy }
      retrieval: { condition: service_healthy }
      llm_generate: { condition: service_healthy }
      evaluation: { condition: service_healthy }
    ports: ["8000:8000"]
    healthcheck: *health_tcp
    volumes:
      - ../data:/app/data
      - ../.cache/huggingface:/root/.cache/huggingface

volumes:
  redis-data: